openapi: 3.0.0
info:
  title: Notes API
  version: "1.0"
  description: A simple API to manage notes
servers:
  - url: "http://{host}:{port}"
    variables:
      host:
        default: "localhost"
      port:
        default: "3000"
paths:
  /notes/{name}:
    get:
      summary: Retrieve a single note by name
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: The name of the note to retrieve
      responses:
        "200":
          description: A note text
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Note not found
    put:
      summary: Update a note by name
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: The name of the note to update
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: Note updated successfully
        "404":
          description: Note not found
    delete:
      summary: Delete a note by name
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: The name of the note to delete
      responses:
        "200":
          description: Note deleted successfully
        "404":
          description: Note not found
  /notes:
    get:
      summary: Retrieve all notes
      responses:
        "200":
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    text:
                      type: string
  /write:
    post:
      summary: Create a new note
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - note_name
                - note
              properties:
                note_name:
                  type: string
                note:
                  type: string
      responses:
        "201":
          description: Note created
        "400":
          description: Bad request
  /UploadForm.html:
    get:
      summary: Get form to upload a note
      responses:
        "200":
          description: HTML form returned
          content:
            text/html:
              schema:
                type: string
